export const INIT = `
DROP TABLE IF EXISTS TICKET;
DROP TABLE IF EXISTS FLIGHT_DATE;
DROP TABLE IF EXISTS FLIGHT_DAY;
DROP TABLE IF EXISTS FLIGHT_PATH;
DROP TABLE IF EXISTS AIRPORT;
DROP TABLE IF EXISTS CUSTOMERS;

CREATE TABLE CUSTOMERS (
    CUSTOMER_ID VARCHAR(20) PRIMARY KEY,
    PASSWORD VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(30) UNIQUE NOT NULL,
    CNAME VARCHAR(30) NOT NULL,
    GENDER ENUM ('M','F','O'),
    DOB DATE,
    ROLE ENUM ('N','R','W'),
    PROFESSION ENUM ('STUDENT', 'ARMYPERSONNEL', 'SENIORCITIZEN', 'OTHER'),
    PHONE_NO VARCHAR(11) NOT NULL,
    ADDRESS VARCHAR(60)
);

CREATE TABLE AIRPORT (
    AIRPORT_ID INT PRIMARY KEY AUTO_INCREMENT,
    AIRPORT_NAME VARCHAR(80) NOT NULL,
    CITY VARCHAR(20) NOT NULL,
    COUNTRY VARCHAR(20) NOT NULL,
    CONSTRAINT UCC UNIQUE (CITY, COUNTRY)
);
ALTER TABLE AIRPORT AUTO_INCREMENT 901;

CREATE TABLE FLIGHT_PATH (
    FLIGHT_ID CHAR(5) PRIMARY KEY,
    SOURCE_ID INT NOT NULL,
    DESTINATION_ID INT NOT NULL,
    DEPARTURE_TIME TIME NOT NULL,
    DURATION TIME NOT NULL,
    NUM_ROWS INT NOT NULL,
    NUM_COLS INT NOT NULL,
    BASE_FARE INT NOT NULL,
    CONTINUED_TILL DATE NOT NULL,
    FOREIGN KEY (SOURCE_ID) REFERENCES AIRPORT(AIRPORT_ID) ON DELETE CASCADE,
    FOREIGN KEY (DESTINATION_ID) REFERENCES AIRPORT(AIRPORT_ID) ON DELETE CASCADE
);

CREATE TABLE FLIGHT_DAY (
    FLIGHT_ID CHAR(5) NOT NULL,
    DAY_OF_WEEK ENUM ('1','2','3','4','5','6','7') NOT NULL,
    PRIMARY KEY (FLIGHT_ID, DAY_OF_WEEK),
    FOREIGN KEY (FLIGHT_ID) REFERENCES FLIGHT_PATH(FLIGHT_ID) ON DELETE CASCADE
);

CREATE TABLE FLIGHT_DATE (
    FLIGHT_ID CHAR(5) NOT NULL,
    DEPARTURE_DATE DATE NOT NULL,
    PRIMARY KEY (FLIGHT_ID, DEPARTURE_DATE),
    FOREIGN KEY (FLIGHT_ID) REFERENCES FLIGHT_PATH(FLIGHT_ID)
);

CREATE TABLE TICKET (
    TICKET_ID INT PRIMARY KEY AUTO_INCREMENT,
    FLIGHT_ID CHAR(5) NOT NULL,
    CUSTOMER_ID VARCHAR(20) NOT NULL,
    PASSENGER_NAME VARCHAR(30) NOT NULL,
    TIME_OF_BOOKING DATETIME NOT NULL,
    DATE_OF_DEPARTURE DATE NOT NULL,
    FARE INT NOT NULL,
    SEAT_NUMBER INT NOT NULL,
    STATUS ENUM ('BOOKED', 'CANCELLED') NOT NULL,
    FOREIGN KEY (FLIGHT_ID, DATE_OF_DEPARTURE) REFERENCES FLIGHT_DATE(FLIGHT_ID, DEPARTURE_DATE) ON DELETE CASCADE,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID),
    CONSTRAINT UNTKT UNIQUE (FLIGHT_ID, DATE_OF_DEPARTURE, SEAT_NUMBER)
);
ALTER TABLE TICKET AUTO_INCREMENT 10000001;

INSERT INTO CUSTOMERS VALUES ('af', 'QWERTY', 'af@gmail.com', 'AARON FRENCH', 'O', '2000-01-01', 'N', 'STUDENT', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('jm', 'QWERTY', 'jm@gmail.com', 'JESSICA MCMURPHY', 'F', '2000-01-01', 'N', 'STUDENT', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('mj', 'QWERTY', 'mj@gmail.com', 'MICHAEL JOHNSON', 'M', '2000-01-01', 'N', 'ARMYPERSONNEL', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('lw', 'QWERTY', 'lw@gmail.com', 'LEBRON WEST', 'M', '2000-01-01', 'N', 'SENIORCITIZEN', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('sm', 'QWERTY', 'sm@gmail.com', 'STEVEN MCGIVER', 'M', '2000-01-01', 'N', 'OTHER', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('as', 'QWERTY', 'as@gmail.com', 'AMANDA STEPHENSON', 'F', '2000-01-01', 'N', 'STUDENT', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('jj', 'QWERTY', 'jj@gmail.com', 'JEREMY JONES', 'O', '2000-01-01', 'N', 'OTHER', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('sg', 'QWERTY', 'sg@gmail.com', 'SAMANTHA GIVENS', 'F', '2000-01-01', 'N', 'OTHER', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('lm1', 'QWERTY', 'lm1@gmail.com', 'LESLIE MCROBERTS', 'F', '2000-01-01', 'N', 'OTHER', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('bd', 'QWERTY', 'bd@gmail.com', 'BRITTANY DAVIDSON', 'F', '2000-01-01', 'N', 'SENIORCITIZEN', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('ew', 'QWERTY', 'ew@gmail.com', 'EMILY WHITE', 'F', '2000-01-01', 'N', 'OTHER', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('wc', 'QWERTY', 'wc@gmail.com', 'WILLIAM CONNELL', 'M', '2000-01-01', 'N', 'STUDENT', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('bh', 'QWERTY', 'bh@gmail.com', 'BARBARA HAVELKOVA', 'F', '2000-01-01', 'N', 'OTHER', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('lm2', 'QWERTY', 'lm2@gmail.com', 'LAUREN MARTIN', 'M', '2000-01-01', 'N', 'OTHER', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('nf', 'QWERTY', 'nf@gmail.com', 'NAOMI FELDMAN', 'O', '2000-01-01', 'N', 'SENIORCITIZEN', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('kc', 'QWERTY', 'kc@gmail.com', 'KEVIN CORINTH', 'O', '2000-01-01', 'R', 'OTHER', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('la', 'QWERTY', 'la@gmail.com', 'LEON ANIDJAR', 'M', '2000-01-01', 'R', 'OTHER', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('gs', 'QWERTY', 'gs@gmail.com', 'GAVIN SLADE', 'O', '2000-01-01', 'R', 'OTHER', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('lp', 'QWERTY', 'lp@gmail.com', 'LAURA PIACENTINI', 'F', '2000-01-01', 'W', 'OTHER', '9876543210', 'ABCD STREET, XYZ CITY');
INSERT INTO CUSTOMERS VALUES ('ir', 'QWERTY', 'ir@gmail.com', 'IAN RAMSEY', 'M', '2000-01-01', 'W', 'OTHER', '9876543210', 'ABCD STREET, XYZ CITY');

INSERT INTO AIRPORT (AIRPORT_NAME, CITY, COUNTRY) VALUES ('JOHN F KENNEDY INTERNATIONAL AIRPORT', 'NEW YORK', 'USA');
INSERT INTO AIRPORT (AIRPORT_NAME, CITY, COUNTRY) VALUES ('ESCOBAR INTERNATIONAL AIRPORT', 'MIAMI', 'USA');
INSERT INTO AIRPORT (AIRPORT_NAME, CITY, COUNTRY) VALUES ('EASTER BAY AIRPORT', 'SAN FIERRO', 'SAN ANDREAS');
INSERT INTO AIRPORT (AIRPORT_NAME, CITY, COUNTRY) VALUES ('LOS SANTOS INTERNATIONAL AIRPORT', 'LOS ANGELES', 'USA');
INSERT INTO AIRPORT (AIRPORT_NAME, CITY, COUNTRY) VALUES ('INDRA GANDHI INTERNATIONAL AIRPORT', 'NEW DELHI', 'INDIA');
INSERT INTO AIRPORT (AIRPORT_NAME, CITY, COUNTRY) VALUES ('HONG KONG INTERNATIONAL AIRPORT', 'HONGKONG', 'HONGKONG');
INSERT INTO AIRPORT (AIRPORT_NAME, CITY, COUNTRY) VALUES ('DUBAI INTERNATIONAL AIRPORT', 'DUBAI', 'UAE');
INSERT INTO AIRPORT (AIRPORT_NAME, CITY, COUNTRY) VALUES ('HEATHROW AIRPORT', 'LONDON', 'UK');
INSERT INTO AIRPORT (AIRPORT_NAME, CITY, COUNTRY) VALUES ('CHHATRAPATI SHIVAJI MAHARAJ INTERNATIONAL AIRPORT', 'MUMBAI', 'INDIA');
INSERT INTO AIRPORT (AIRPORT_NAME, CITY, COUNTRY) VALUES ('FRANKFURT AIRPORT', 'FRANKFURT', 'GERMANY');

INSERT INTO FLIGHT_PATH VALUES ('AL301', 901, 902, '10:00:00', '04:00:00', 8, 6, 20000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL302', 902, 901, '10:00:00', '08:00:00', 8, 6, 30000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL303', 901, 903, '10:00:00', '08:00:00', 8, 6, 30000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL304', 903, 901, '11:00:00', '08:00:00', 8, 6, 30000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL305', 902, 903, '11:00:00', '08:00:00', 8, 6, 30000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL306', 903, 902, '11:00:00', '02:00:00', 8, 6, 15000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL307', 901, 905, '12:00:00', '02:00:00', 8, 6, 15000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL308', 901, 906, '12:00:00', '02:00:00', 8, 6, 15000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL309', 905, 906, '12:00:00', '02:00:00', 8, 6, 15000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL310', 905, 901, '16:00:00', '10:00:00', 8, 6, 35000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL311', 906, 901, '16:00:00', '10:00:00', 8, 6, 35000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL312', 904, 908, '16:00:00', '10:00:00', 8, 6, 35000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL313', 908, 909, '04:00:00', '10:00:00', 8, 6, 35000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL314', 909, 904, '04:00:00', '16:00:00', 8, 6, 50000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL315', 903, 907, '04:00:00', '16:00:00', 8, 6, 50000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL316', 904, 907, '10:00:00', '16:00:00', 8, 6, 50000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL317', 909, 910, '10:00:00', '16:00:00', 8, 6, 50000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL318', 909, 910, '10:00:00', '26:00:00', 8, 6, 70000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL319', 910, 909, '00:00:00', '26:00:00', 8, 6, 70000, '2030-12-31');
INSERT INTO FLIGHT_PATH VALUES ('AL320', 906, 907, '00:00:00', '26:00:00', 8, 6, 70000, '2030-12-31');

INSERT INTO FLIGHT_DAY VALUES ('AL301', '1');
INSERT INTO FLIGHT_DAY VALUES ('AL301', '2');
INSERT INTO FLIGHT_DAY VALUES ('AL301', '3');
INSERT INTO FLIGHT_DAY VALUES ('AL302', '2');
INSERT INTO FLIGHT_DAY VALUES ('AL302', '4');
INSERT INTO FLIGHT_DAY VALUES ('AL302', '6');
INSERT INTO FLIGHT_DAY VALUES ('AL303', '1');
INSERT INTO FLIGHT_DAY VALUES ('AL303', '3');
INSERT INTO FLIGHT_DAY VALUES ('AL303', '5');
INSERT INTO FLIGHT_DAY VALUES ('AL304', '1');
INSERT INTO FLIGHT_DAY VALUES ('AL304', '4');
INSERT INTO FLIGHT_DAY VALUES ('AL304', '7');
INSERT INTO FLIGHT_DAY VALUES ('AL305', '3');
INSERT INTO FLIGHT_DAY VALUES ('AL305', '4');
INSERT INTO FLIGHT_DAY VALUES ('AL305', '6');
INSERT INTO FLIGHT_DAY VALUES ('AL306', '2');
INSERT INTO FLIGHT_DAY VALUES ('AL306', '3');
INSERT INTO FLIGHT_DAY VALUES ('AL306', '4');
INSERT INTO FLIGHT_DAY VALUES ('AL306', '5');
INSERT INTO FLIGHT_DAY VALUES ('AL306', '6');
INSERT INTO FLIGHT_DAY VALUES ('AL307', '1');
INSERT INTO FLIGHT_DAY VALUES ('AL307', '2');
INSERT INTO FLIGHT_DAY VALUES ('AL307', '4');
INSERT INTO FLIGHT_DAY VALUES ('AL307', '5');
INSERT INTO FLIGHT_DAY VALUES ('AL307', '7');
INSERT INTO FLIGHT_DAY VALUES ('AL308', '1');
INSERT INTO FLIGHT_DAY VALUES ('AL308', '2');
INSERT INTO FLIGHT_DAY VALUES ('AL308', '3');
INSERT INTO FLIGHT_DAY VALUES ('AL308', '4');
INSERT INTO FLIGHT_DAY VALUES ('AL308', '5');
INSERT INTO FLIGHT_DAY VALUES ('AL308', '6');
INSERT INTO FLIGHT_DAY VALUES ('AL308', '7');
INSERT INTO FLIGHT_DAY VALUES ('AL309', '1');
INSERT INTO FLIGHT_DAY VALUES ('AL309', '2');
INSERT INTO FLIGHT_DAY VALUES ('AL309', '3');
INSERT INTO FLIGHT_DAY VALUES ('AL309', '4');
INSERT INTO FLIGHT_DAY VALUES ('AL309', '5');
INSERT INTO FLIGHT_DAY VALUES ('AL309', '6');
INSERT INTO FLIGHT_DAY VALUES ('AL309', '7');
INSERT INTO FLIGHT_DAY VALUES ('AL310', '7');
INSERT INTO FLIGHT_DAY VALUES ('AL311', '6');
INSERT INTO FLIGHT_DAY VALUES ('AL312', '5');
INSERT INTO FLIGHT_DAY VALUES ('AL313', '4');
INSERT INTO FLIGHT_DAY VALUES ('AL314', '3');
INSERT INTO FLIGHT_DAY VALUES ('AL315', '2');
INSERT INTO FLIGHT_DAY VALUES ('AL316', '1');
INSERT INTO FLIGHT_DAY VALUES ('AL317', '2');
INSERT INTO FLIGHT_DAY VALUES ('AL318', '4');
-- INSERT INTO FLIGHT_DAY VALUES ('AL318', '2');
INSERT INTO FLIGHT_DAY VALUES ('AL319', '5');
INSERT INTO FLIGHT_DAY VALUES ('AL320', '7');

DELIMITER $$

DROP PROCEDURE IF EXISTS ADD_FLIGHT_DATE $$
CREATE PROCEDURE ADD_FLIGHT_DATE ()
BEGIN
    DECLARE FID CHAR(5);
    DECLARE DEPDATE DATE;
    DECLARE DONE INT;
    DECLARE CUR1 CURSOR FOR
        SELECT FLIGHT_ID
        FROM FLIGHT_DAY
        WHERE DAY_OF_WEEK = DAYOFWEEK(CURDATE());
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = 1;
    SET DONE = 0;
    SET DEPDATE = DATE_ADD(CURDATE(), INTERVAL 56 DAY);
    OPEN CUR1;
    ITR: LOOP
        FETCH CUR1 INTO FID;
        IF DONE = 1 THEN
            LEAVE ITR;
        END IF;
        INSERT INTO FLIGHT_DATE VALUES (FID, DEPDATE);
    END LOOP ITR;
    CLOSE CUR1;
END $$







DROP PROCEDURE IF EXISTS ADD_FLIGHT_DATE_LOOP $$
CREATE PROCEDURE ADD_FLIGHT_DATE_LOOP ()
BEGIN
    DECLARE V_COUNTER INT UNSIGNED DEFAULT 0;
    DECLARE V_MAX INT UNSIGNED DEFAULT 56;
    DECLARE DEP_DATE DATE DEFAULT CURDATE();
    DECLARE FID CHAR(5);

    WHILE V_COUNTER < V_MAX DO
        BLOCK_CURSOR: BEGIN
            DECLARE DONE INT DEFAULT 0;
            DECLARE CUR0 CURSOR FOR
                SELECT FLIGHT_ID
                FROM FLIGHT_DAY
                WHERE DAY_OF_WEEK = DAYOFWEEK(DEP_DATE);
            DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = 1;
            OPEN CUR0;
            ITR: LOOP
                FETCH CUR0 INTO FID;
                IF DONE = 1 THEN
                    LEAVE ITR;
                END IF;
                INSERT INTO FLIGHT_DATE VALUES (FID, DEP_DATE);
            END LOOP ITR;
            CLOSE CUR0;
            SET V_COUNTER = V_COUNTER + 1;
            SET DEP_DATE = DATE_ADD(DEP_DATE, INTERVAL 1 DAY);
        END BLOCK_CURSOR;
    END WHILE;
END $$






DROP FUNCTION IF EXISTS CHANGE_CONTINUING_DATE_FLIGHT_PATH $$
CREATE FUNCTION CHANGE_CONTINUING_DATE_FLIGHT_PATH (
    FID CHAR(5),
    DISCONTINUING_DATE DATE
)
RETURNS BOOLEAN DETERMINISTIC
BEGIN
    DECLARE DONE INT;
    DECLARE DEP_DATE DATE;
    DECLARE IS_SUCCESS BOOLEAN;

    IF NOT EXISTS (
        SELECT *
        FROM TICKET
        WHERE DATE_OF_DEPARTURE >= DISCONTINUING_DATE
        AND FLIGHT_ID = FID
    ) THEN
        UPDATE FLIGHT_PATH
        SET CONTINUED_TILL = DISCONTINUING_DATE
        WHERE FLIGHT_ID = FID;

        DELETE FROM FLIGHT_DATE
        WHERE DEPARTURE_DATE >= DISCONTINUING_DATE
        AND FLIGHT_ID = FID;

        SET IS_SUCCESS = TRUE;

    ELSE
        SET IS_SUCCESS = FALSE;
    END IF;
    
    RETURN IS_SUCCESS;
END $$







DROP FUNCTION IF EXISTS CALCULATE_TICKET_PRICE $$
CREATE FUNCTION CALCULATE_TICKET_PRICE (
    CID VARCHAR(20),
    FID CHAR(5),
    DEP_DATE DATE,
    IS_WINDOW BOOLEAN
)
RETURNS INT DETERMINISTIC
BEGIN
    DECLARE PRFSN ENUM ('STUDENT', 'ARMYPERSONNEL', 'SENIORCITIZEN', 'OTHER');
    DECLARE TICKET_COST INT;
    DECLARE DATE_DIFF INT;
    DECLARE PERMISSION CHAR;

    SELECT PROFESSION, ROLE
    INTO PRFSN, PERMISSION
    FROM CUSTOMERS
    WHERE CUSTOMER_ID = CID;

    SELECT BASE_FARE
    INTO TICKET_COST
    FROM FLIGHT_PATH
    WHERE FLIGHT_ID = FID;

    IF PERMISSION != 'N' THEN
        SET TICKET_COST = NULL;
    END IF;

    IF PRFSN = 'STUDENT' THEN
        SET TICKET_COST = 0.9 * TICKET_COST;
    ELSEIF PRFSN = 'ARMYPERSONNEL' THEN
        SET TICKET_COST = 0.75 * TICKET_COST;
    ELSEIF PRFSN = 'SENIORCITIZEN' THEN
        SET TICKET_COST = 0.95 * TICKET_COST;
    ELSEIF PRFSN IS NULL THEN
        SET TICKET_COST = NULL;
    END IF;

    IF IS_WINDOW = TRUE THEN
        SET TICKET_COST = TICKET_COST + 150;
    ELSEIF IS_WINDOW IS NULL THEN
        SET TICKET_COST = NULL;
    END IF;

    SET DATE_DIFF = DATEDIFF(DEP_DATE, CURDATE());
    IF DATE_DIFF < 0 THEN
        SET TICKET_COST = NULL;
    ELSEIF DATE_DIFF = 0 THEN
        SET TICKET_COST = TICKET_COST + 10000;
    ELSEIF DATE_DIFF < 7 THEN
        SET TICKET_COST = TICKET_COST + 5000;
    ELSEIF DATE_DIFF < 28 THEN
        SET TICKET_COST = TICKET_COST + 2500;
    ELSEIF DATE_DIFF > 56 THEN
        SET TICKET_COST = NULL;
    END IF;

    RETURN TICKET_COST;
END $$








DROP PROCEDURE IF EXISTS DELETE_FLIGHTS $$
CREATE PROCEDURE DELETE_FLIGHTS ()
BEGIN
    DELETE FROM FLIGHT_PATH
    WHERE CONTINUED_TILL < CURDATE();

    DELETE FROM FLIGHT_DATE
    WHERE DATE_OF_DEPARTURE < CURDATE();
END $$







DROP PROCEDURE IF EXISTS SHOW_FLIGHTS $$
CREATE PROCEDURE SHOW_FLIGHTS (
    IN SOURCE_CITY VARCHAR(20),
    IN SOURCE_COUNTRY VARCHAR(20),
    IN DEST_CITY VARCHAR(20),
    IN DEST_COUNTRY VARCHAR(20),
    IN FDATE DATE
)
BEGIN
    DECLARE SOURCE_AIRPORT_ID INT;
    DECLARE DEST_AIRPORT_ID INT;
    DECLARE V_COUNTER INT UNSIGNED DEFAULT 0;
    DECLARE V_MAX INT UNSIGNED DEFAULT 7;

    SET FDATE = DATE_ADD(FDATE, INTERVAL - LEAST(DATEDIFF(FDATE, CURDATE()), 2) DAY);

    SELECT AIRPORT_ID
    INTO SOURCE_AIRPORT_ID
    FROM AIRPORT
    WHERE CITY = SOURCE_CITY
    AND COUNTRY = SOURCE_COUNTRY;

    SELECT AIRPORT_ID
    INTO DEST_AIRPORT_ID
    FROM AIRPORT
    WHERE CITY = DEST_CITY
    AND COUNTRY = DEST_COUNTRY;

    WHILE V_COUNTER < V_MAX DO
        SELECT FLIGHT_ID
        FROM FLIGHT_PATH
        WHERE SOURCE_ID = SOURCE_AIRPORT_ID
        AND DESTINATION_ID = DEST_AIRPORT_ID
        AND FLIGHT_ID IN (
            SELECT FLIGHT_ID
            FROM FLIGHT_DATE
            WHERE DEPARTURE_DATE = FDATE
        );
        SET FDATE = DATE_ADD(FDATE, INTERVAL 1 DAY);
        SET V_COUNTER = V_COUNTER + 1;
    END WHILE;
END $$

DELIMITER ;
CALL ADD_FLIGHT_DATE_LOOP();

-- SELECT * FROM CUSTOMERS;
-- SELECT * FROM AIRPORT;
-- SELECT * FROM FLIGHT_PATH;
-- SELECT * FROM FLIGHT_DAY;
-- SELECT * FROM FLIGHT_DATE;
-- SELECT * FROM TICKET;

DELIMITER $$
`
